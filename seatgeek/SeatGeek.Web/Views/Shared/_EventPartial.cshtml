@using SeatGeek.Services.Data.Interfaces
@using SeatGeek.Web.Infrastructure.Extensions
@using SeatGeek.Web.ViewModels.Event
@model EventAllViewModel

@inject IAgentService AgentService
@inject IEventService HouseService
@{
    bool isUserAgent = await AgentService.AgentExistsByUserIdAsync(this.User.GetId()!);
    bool isAgentOwnerOfTheEvent = await AgentService.HasEventWithIdAsync(this.User.GetId(), Model.Id.ToString());
   
}

<div class="col-md-4 grow img">
    <div class="card mb-1 " >
        <img class="card-img-top" src="@Model.ImageUrl" alt="Event Image">
        <div class="card-body text-center">
            <h4>@Model.Title</h4>
            <h6><b>@Model.City</b></h6>
         
            <a asp-area=""  asp-controller="Event" asp-action="Details" asp-route-id="@Model.Id"
               class="btn btn-success">Details</a>

            @if (this.User.Identity?.IsAuthenticated ?? false)
            {

                @if ((isUserAgent && isAgentOwnerOfTheEvent) || this.User.IsAdmin())
                {

                    <a asp-area="" asp-controller="Event" asp-action="Edit" asp-route-id="@Model.Id"
                       class="btn btn-warning">Edit</a>
                    <a asp-area=""  asp-controller="Event" asp-action="Delete" asp-route-id="@Model.Id"
                       class="btn btn-danger">Delete</a>
                    
                }
               

            
            }
        </div>
    </div>
</div>
